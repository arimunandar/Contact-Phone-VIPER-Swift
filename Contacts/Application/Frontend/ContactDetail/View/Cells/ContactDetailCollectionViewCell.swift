//
//  ContactDetailCollectionCell.swift
//  Contacts
//
//  Created by Ari Munandar on 4/26/17.
//  Copyright (c) 2017 Ari Munandar. All rights reserved.
//
//  This file was generated by the Devcast Studio XCode Templates
//	Name		: Ari Muandnar
//	E-Mail		: arimunandar.dev@gmail.com
// 	Instagram	: _arymunandar_
// 	Youtube		: https://www.youtube.com/channel/UC7jr8DR06tcVR0QKKl6cSNA
//

import UIKit
import EasyPeasy

class ContactDetailCollectionViewCell: BaseCollectionCell {

    // MARK - Initial Button
    lazy var menuButton: UIButton = {
        let button = UIButton()
        button.tintColor = Colors.WHITE
        button.backgroundColor = Colors.MID_GREY
        button.layer.cornerRadius = Sizes._25
        button.translatesAutoresizingMaskIntoConstraints = false
        button.addTarget(self, action: #selector(handleMenu), for: .touchUpInside)
        return button
    }()

    // MARK - Initial Label
    var nameLabel: UILabel = {
        let label = UILabel()
        label.textColor = Colors.DARK_GREY
        label.backgroundColor = Colors.CLEAR
        label.font = UIFont(name: "SanFranciscoText-Regular", size: FontSize.NORMAL)
        label.textAlignment = .center
        label.numberOfLines = 0
        label.lineBreakMode = .byWordWrapping
        label.sizeToFit()
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()

    var setMenuIcon: String? {
        didSet {
            guard let icon = setMenuIcon else {
                return
            }
            self.menuButton.setImage(UIImage(named: icon)?.withRenderingMode(.alwaysTemplate), for: .normal)
        }
    }

    var setTag: Int? {
        didSet {
            guard let tag = setTag else {
                return
            }
            self.menuButton.tag = tag
        }
    }

    var setMenuName: String? {
        didSet {
            guard let name = setMenuName else {
                return
            }
            self.nameLabel.text = name
        }
    }

    var setId: Int = 0
    var setMobile: String = ""
    var setEmail: String = ""

    // MARK - Setup Selection Cell
    override var isSelected: Bool {
        didSet {
            if isSelected {
                // Do someting...
            } else {
                // Do someting...
            }
        }
    }

    // MARK - Lifecycle
    override func setupViews() {
        super.setupViews()

        // MARK - Call Setup Cell function
        setupComponent()

        // MARK - Call Setup Cell Frame
        setupFrame()

    }

}

// MARK - Setup Component View
extension ContactDetailCollectionViewCell {

    // MARK - Setup Cell Component
    func setupComponent() {
        self.addSubview(self.menuButton)
        self.addSubview(self.nameLabel)
    }

    // MARK - Setup Cell frame
    func setupFrame() {
        self.menuButton <- [
            Top(),
            CenterX(),
            Size(Sizes._50)
        ]

        self.nameLabel <- [
            Left(),
            Right(),
            Bottom()
        ]
    }

}

extension ContactDetailCollectionViewCell {
    func handleMenu(_ sender: UIButton) {
        switch sender.tag {
        case 0:
            guard let number = URL(string: "sms://\(setMobile)") else { return }
            if #available(iOS 10.0, *) {
                UIApplication.shared.open(number, options: [:], completionHandler: nil)
            } else {
                if let url = URL(string: "sms://\(number)") {
                    UIApplication.shared.openURL(url)
                }
            }
        case 1:
            guard let number = URL(string: "telprompt://\(setMobile)") else { return }
            if #available(iOS 10.0, *) {
                UIApplication.shared.open(number, options: [:], completionHandler: nil)
            } else {
                if let url = URL(string: "telprompt://\(number)") {
                    UIApplication.shared.openURL(url)
                }
            }
        case 2:
            guard let email = URL(string: "mailto://\(setEmail)") else { return }
            if #available(iOS 10.0, *) {
                UIApplication.shared.open(email, options: [:], completionHandler: nil)
            } else {
                if let url = URL(string: "mailto://\(email)") {
                    UIApplication.shared.openURL(url)
                }
            }
        case 3:
            let favorite: [String: Int] = ["id": setId]
            NotificationCenter.default.post(name: NSNotification.Name(rawValue: "Favorite"), object: nil, userInfo: favorite)
        default:
            break
        }
    }
}
